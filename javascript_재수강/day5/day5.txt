for문
for문은 while문과 달리 자체적으로 초기값, 조건식, 증감식을 모두 포함하고 있는 반복문입니다
while문보다는 간결하게 반복을 표현할 수 있습니다

for(초기값; 조건식; 증감식){
    조건식의 결과가 참인 동안 반복할 실행문;
    ...
}

for(let i = 1; i <= 5; i++){
    console.log('hello');
}

while문과의 비교
let i = 1;
while(i <= 5){
    console.log('hello');
    i++;
}

continue 문
반복중인 문장 내에서 사용하며 해당 문장의 나머지 부분을 건너뛰고 다음 조건식의 판단으로 넘어가게 합니다.
while문 또는 for문{
    반복 중인 문장
    ...
    continue; //continue를 만나면 다시 반복문의 조건으로 돌아감(현재 반복횟수는 완료)
    반복 중인 문장
}

break문
반복중인 문장 내에서 사용하여 해당 반복문을 완전히 종료시키고 반복문 다음에 위치한 실행문으로 이동합니다

중첩 반복문
반복문이 2개 이상 겹쳐 있는 문장을 의미합니다
while(조건식){
    ...
    while(조건식){
        ...
    }
}

for(초기값; 조건식; 증감식){
    ...
    for(초기값; 조건식; 증감식){
        ...
    }
}

for(let i = 1; i <= 5; i++){
    console.log(`현재 i의 값 : ${i}`);
    for(let j=1; j<=3; j++){
        console.log(`현재 j의 값 : ${j}`)
    }
}

배열(Array)
이름과 인덱스로 참조되는 정렬된 값의 집합입니다. 배열을 구성하는 각각의 값을 배열요소라고 하며, 배열에서의 위치를 가리키는 숫자를 인덱스라고 합니다

배열을 만드는 방법
let 배열명;
배열명 = [요소1, 요소2, 요소3, ..];

let 배열명 = new Array(요소1, 요소2, 요소3, ..);

자바스크립트 배열의 특징
1. 배열요소의 타입이 고정되어 있지 않음
let arr = [1, 1.5, true, 'apple'];
2. 배열요소의 인덱스가 연속적이지 않아도 됨
let arr;
arr[0] = 1;
arr[3] = 10;
3. 배열이 Array객체로 디뤄짐
객체로 다뤄지면 객체 안의 속성과 기능(메소드)를 사용할 수 있다

Array객체의 메소드
push(): 배열에 요소를 추가
pop(): 배열에 마지막 주소에 있는 값을 제거
shift(): 배열에 첫번째 주소에 있는 값을 제거
concat(): 두개의 배열을 합침
join(): 배열요소 사이에 원하는 문자를 삽입
reverse(): 배열을 역순으로 재배치
sort(): 배열을 오름차순으로 정렬


for in 문
for(변수선언 in 객체){
    객체 요소의 개수만큼 반복할 문장;
}

let arr1 = ['김사과', 20, 160.5, true];
for(let i in arr1){
    //객체 요소의 개수만큼 반복하면서 변수에 객체의 인덱스를 저장
    console.log(i); //0 1 2 3
}

let obj1 = {'userid':'apple','name':'김사과','age':20}
for(let i in obj1){
    //객체 요소의 개수만큼 반복하면서 변수에 객체의 키를 저장
    console.log(i); //userid name age
}

for of 문
for(변수선언 of 객체){
    객체 요소의 개수만큼 반복할 문장;
}

let arr1 = ['김사과', 20, 160.5, true];
for(let i of arr1){
    //객체 요소의 개수만큼 반복하면서 변수에 요소 값을 저장
    console.log(i); //'김사과' 20 160.5 true
}

forEach문
오직 Array객체에서만 사용할 수 있는 메서드
배열.forEach(콜백함수(item, index, arr){
    배열 요소의 개수만큼 반복할 문장
});

*콜백함수
자동으로 자체적으로 불려지는 함수
배열의 요소의 개수만큼 자동으로 호출

let arr1 = ['김사과', 20, 160.5, true];
arr1.forEach(function(item, index, arr2){
    //item: 배열 요소의 value, index: 배열 요소의 인덱스, arr2: 해당 배열 전체
    console.log(item, index, arr2[index+1]);
});

