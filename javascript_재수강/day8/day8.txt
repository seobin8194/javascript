프로토타입(prototype)
내가 어떻게 만들어졌는지 템플릿
자바스크립트의 모든 객체는 프로토타입이라는 객체 속성을 포함하고 있다
생성자와 클래스 안에도 프로토타입 객체가 존재
모든 객체는 프로토타입을 참조하여 프로토타입으로부터 포로퍼티와 메소드를 상속받고 자신의 객체에도 프로로타입을 저장한다
이처럼 자바스크립트의 모든 객체는 최소한 하나이상의 다른 객체로부터 상속받으며 상속되는 정보를 제공하는 객체를 프로토타입이라고 합니다

//생성자 내에도 프로토타입이 존재
function Dog(){
    ...
}

//Dog.prototype를 참조하여 프로퍼티와 함수를 상속받은 객체 Rucy
//Rucy내에도 자신이 만들어진 템플릿인 프로토타입이 저장된다
const Rucy = new Dog();

* 자바스크립트에 내장된 모든 생성자나 사용자 정의 생성자는 Object.protype과 자신의 생성자 객체를 프로토타입으로 가집니다
-> 객체를 생성하면 기본 기능이 생기는 이유
Rucy가 Dog의 프로토타입을 참조하여 생성될때 Object.prototype도 같이 상속된다
Rucy <-------------- Dog.prototype
     <-------------- Object.prototype

* 프로토타입을 참조하여 객체가 생성될때 내 자신에도 프로토타입을 가짐. 
  내 프로토타입을 변형하여 다른 객체에게 물려줄 수 있다. 이때 내가 참조한 프로토타입이 변형되는 것은 아니다
* 프로토타입이 변경되면 내 프로토타입을 참조하여 만든 객체들 모두 변경된다


자바스크립트 내장객체
Math 객체
Math객체는 수학에서 자주 사용하는 상수와 함수들을 미리 구현해 놓은 자바스크립트 내장 객체입니다
min(): 최소값을 리턴, 매개변수가 전달되지 않으면 Infinity를 리턴, 비교할 수 없는 값이 포함되어 있으면 NaN을 리턴
max(): 최대값을 리턴, 매개변수가 전달되지 않으면 -Infinity를 리턴, 비교할 수 없는 값이 포함되어 있으면 NaN을 리턴
round(): 인수로 전달받은 값의 소수점 첫번째 자리에서 반올림하여 리턴
floor(): 소수점 첫번째 자리에서 내림
ceil(): 소수점 첫번째 자리에서 올림
random(): 0보다 크고 1보다 작은 무작위 소수를 리턴

String 객체
문자열을 손쉽게 만들고 다룰 수 있도록 합니다

문자열 객체
const str = 'javascript';
const str = new String('javascript');

문자열객체의 프로퍼티
length: 문자열의 길이를 저장

문자열 객체의 함수
indexOf(): 처음으로 매개변수로 전달된 문자열이 등장하는 위치를 리턴
charAt(): 매개변수로 전달된 인덱스에 위치한 문자를 리턴
include(): 매개변수로 전달된 문자열이 포함되어 있는지 여부를 리턴
subString(): 매개변수로 전달된 시작 인덱스부터 종료인덱스 바로 앞까지 문자열을 추출하여 리턴
substr(): 매개변수로 전달된 시작 인덱스부터 매개변수로 전달된 개수만큼 문자열을 추출하여 리턴
split(): 매개변수로 전달된 구분자를 기준으로 문자열을 나눈 후 하나의 배열에 저장
replace(): 원본 문자열을 매개변수로 전달된 문자열로 치환
trim(): 문자열의 앞뒤 공백을 제거
toUpperCase(): 문자열의 영문자 중 소문자를 모두 대문자로 변환
toLowerCase(): 문자열의 영문자 중 대문자를 모두 소문자로 변환


Date 객체
날짜 시간 등을 쉽게 처리할 수 있는 내장객체입니다.
날짜 형식, 나라별 시간, 일주일 뒤 한달 뒤 등 날짜 계산

const date = new Date(21,4,4);

년도(year)
1. 2자리로 표현: 1900 ~ 1999 예)21 -> 1921년도를 의미
2. 4자리로 표현: 2000 ~ 예)2021 -> 2021년도를 의미
월(month)
범위 0 ~ 11(1월 ~ 12월)
일(day), 시(hour) 분(minute) 초(second)

Date 객체를 만드는 방법
1. new Date(): 현재 날짜 시간을 저장하는 객체가 만들어짐(사용자 컴퓨터 기준)
2. new Date("날짜 모양을 가진 문자열"): 해당 날짜 시간을 가리키는 객체가 만들어짐
3. new Date("Timestamp 밀리초"): 1970년 1월 1일 0시 ~ 해당 밀리초만큼 지난 시간의 날짜 객체가 만들어짐
4. new Date(년,월, 일, 시, 분, 초, 밀리초): 해당 특정 날짜 시간을 가리키는 날짜 객체가 만들어짐

window객체
현재 사용하고 있는 웹 브라우저의 창이나 탭을 표현하기 위한 객체들이며 웹 브러우저는 window객체를 이용하여 브러우저 창을 표현하거나 다룰 수 있다
비표준: 각 브라우저에 특화된 속성이나 함수가 존재하므로 공통적인 기능만 사용하자

window객체 메소드
setTimeout(): 일정시간이 지난 후 매개변수로 제공된 함수를 실행
const 함수명 = function(){
    ...
}

const st = setTimeout(함수명, 시간)

clearTimeout(): setTimeout에서 실행된 함수를 취소
clearTimeout(setTimeout객체명);

setInterval(): 일정 시간마다 매개변수로 제공된 함수를 실행
const 함수명 = function(){
    ...
}

const si = setInterval(함수명, 시간)

clearInterval(): setInterval()에서 실행된 함수를 취소
clearTimeout(setInterval 객체명);


Location 객체
현재 브라우저에 표시된 html문서의 주소를 얻거나 브라우저에 새 문서를 불러올때 사용할 수 있는 객체
url(주소창)에 관련된 객체
window 하위 객체

location객체의 프로퍼티
href: url 전체 정보를 리턴, 특정 페이지로 이동
protocol: 프로토콜 정보 리턴
hostname: 호스트이름과 포트번호 리턴
pathname: url경로부분의 정보 리턴

http://www.naver.com/blog/apple.nhn
----- -------------- --------------
protocol   hostname    pathname


document객체
window의 하위 객체
웹 페이지에 존재하는 html요소에 접근하고자할때 사용하는 객체입니다

getElementsByTagName(): 해당 태그이름의 요소를 모두 선택
getElementById(): 해당 아이디의 요소를 선택
getElementsByClassName(): 해당 클래스에 속한 요소를 모두 선택
getElementsByName(): 해당 name속성값을 가지는 요소를 모두 선택
querySelectorAll(): 해당 선택자로 선택되는 요소를 모두 선택

문서객체모델(Document Obhect Model -> dom)
html문서나 xml문서 등을 접근하기 위한 일종의 인터페이스입니다. 이 객체 모델은 문서 내의 모든 요소를 정의하고 각각의 요소에 접근하는 방법을 제공
                                               DOM Tree

                                           <html lang="en">
                                  <head>                     <body>
                                 <title>                  <h2>     <p>
                                  dom                   dom이란   html문서나 ..